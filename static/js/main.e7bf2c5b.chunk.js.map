{"version":3,"sources":["PlayerIcon.jsx","PlayerButton.jsx","ConnectionStatus.jsx","Button.jsx","Container.jsx","GamePage.jsx","Title.jsx","CodeInput.jsx","ConnectButton.jsx","VerticalContainer.jsx","DiscordButton.jsx","CodePage.jsx","App.jsx","index.js"],"names":["PlayerIconWrapper","styled","img","PlayerIcon","player","src","color","alive","alt","backgroundColors","black","cyan","green","orange","pink","purple","yellow","lime","red","white","brown","blue","PlayerButtonWrapper","button","PlayerButton","loading","sendAliveUpdate","ColoredPlayerButton","disabled","onClick","name","ConnectionStatusText","p","Dot","span","YellowDot","ConnectionStatus","channelName","reconnecting","require","default","ExternalContainer","div","InternalContainer","Container","children","key","TopIcon","FullButton","Button","HalfButton","FlexContainer","PlayerContainer","TopBar","GamePage","gameState","sendStageUpdate","channel_name","game_stage","players","map","Title","className","height","style","marginBottom","CodeInputWrapper","input","CodeInput","syncId","setSyncId","placeholder","value","maxLength","syncIdLength","onInput","e","target","toUpperCase","autoComplete","autoCorrect","autoCapitalize","spellCheck","ConnectButtonWrapper","ConnectButton","connectToGame","length","VerticalContainer","DiscordButtonWrapper","DiscordIcon","DiscordButton","window","open","CodePage","centerVertically","NoSleep","enable","App","idFromPath","location","pathname","split","join","useState","connected","setConnected","setReconnecting","socket","setSocket","setLoading","sync_id","setGameState","emit","JSON","stringify","stage","newSocket","openSocket","process","on","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7bf2c5b.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst PlayerIconWrapper = styled.img`\n  height: 35px;\n`\n\nexport default function PlayerIcon ({ player }) {\n  return <PlayerIconWrapper src={`crewmates/${player.color}${player.alive ? '' : '_dead'}.png`} alt={player.color}/>\n}","import React from 'react'\nimport styled from 'styled-components'\nimport PlayerIcon from './PlayerIcon'\n\nconst backgroundColors = {\n  black: '#72808B',\n  cyan: '#68B4A7',\n  green: '#4E885D',\n  orange: '#E2A45B',\n  pink: '#F59CD8',\n  purple: '#A171DF',\n  yellow: '#E0E05B',\n  lime: '#90DB84',\n  red: '#DD6867',\n  white: '#B3BED2',\n  brown: '#A07E58',\n  blue: '#576AD4'\n}\n\nconst PlayerButtonWrapper = styled.button`\n  font-family: 'Poppins';\n  font-weight: bold;\n  color: white;\n  border: none;\n  outline: white;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  height: 80px;\n  width: calc(50% - 5px);\n`\n\nexport default function PlayerButton ({ player, loading, sendAliveUpdate }) {\n  const ColoredPlayerButton = styled(PlayerButtonWrapper)`\n    background-color: ${backgroundColors[player.color]};\n    filter: ${player.alive ? '' : 'brightness(0.6)'};\n  `\n\n  return (\n    <ColoredPlayerButton disabled={loading} onClick={() => { sendAliveUpdate(player.color, !player.alive) }}>\n      <PlayerIcon player={player} />\n      <div>{player.name}</div>\n    </ColoredPlayerButton>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst ConnectionStatusText = styled.p`\n  font-family: 'Poppins';\n  font-size: 14px;\n  text-transform: uppercase;\n  vertical-align: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`\n\nconst Dot = styled.span`\n  height: 10px;\n  width: 10px;\n  background-color: #6ACC86;\n  border-radius: 50%;\n  display: inline-block;\n  margin-right: 5px;\n`\n\nconst YellowDot = styled(Dot)`\n  background-color: #E0E05B;\n`\n\nexport default function ConnectionStatus ({ channelName, reconnecting }) {\n  return (\n    <ConnectionStatusText>\n      { reconnecting ? (\n        <div>\n          <YellowDot/> Reconnecting...\n        </div>\n      ) : (\n        <div>\n          <Dot/> Connected to <b>{channelName}</b>\n        </div>\n      ) }\n    </ConnectionStatusText>\n  )\n}","const { default: styled } = require(\"styled-components\")\n\nexport default styled.button`\n  border: none;\n  height: 50px;\n  font-family: 'Poppins';\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 27px;\n  color: #ffffff;\n  background-color: #505DD6;\n  border-radius: 25px;\n  margin-bottom: 10px;\n\n  &:hover {\n    background-color: #444FB6;\n  }\n\n  &:focus, button:active {\n    border: none;\n  }\n\n  &:disabled { \n    background-color: #A7AEEB\n  }\n`","import React from 'react'\nimport styled from 'styled-components';\n\nconst ExternalContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nconst InternalContainer = styled.div`\n  margin-right: 25px;\n  margin-left: 25px;\n  text-align: center;\n  width: 100%;\n  max-width: 330px;\n`\n\nexport default function Container ({ children }) {\n  return (\n    <ExternalContainer key=\"external\">\n      <InternalContainer key=\"internal\">\n        {children}\n      </InternalContainer>\n    </ExternalContainer>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport PlayerButton from './PlayerButton';\nimport ConnectionStatus from './ConnectionStatus'\nimport Button from './Button'\nimport Container from './Container';\n\nconst TopIcon = styled.img`\n  height: 55px;\n  margin-top: 25px;\n`\n\nconst FullButton = styled(Button)`\n  width: 100%;\n`\n\nconst HalfButton = styled(Button)`\n  width: calc(50% - 5px);\n`\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst PlayerContainer = styled(FlexContainer)`\n  flex-wrap: wrap;\n`\n\nconst TopBar = styled.div`\n  align-items: center;\n`\n\nfunction GamePage ({ gameState, sendStageUpdate, sendAliveUpdate, loading, reconnecting }) {\n  return (\n    <Container>\n      <TopBar>\n        <TopIcon src='icon.png' alt='Amongcord Icon'/>\n      </TopBar>\n      <ConnectionStatus reconnecting={reconnecting} channelName={gameState.channel_name} />\n      <FullButton disabled={gameState.game_stage === 'lobby' || loading} onClick={() => { sendStageUpdate('lobby') }}>Lobby</FullButton><br/>\n      <FlexContainer>\n        <HalfButton disabled={gameState.game_stage === 'tasks' || loading} onClick={() => { sendStageUpdate('tasks') }}>Tasks</HalfButton>\n        <HalfButton disabled={gameState.game_stage === 'discussion' || loading} onClick={() => { sendStageUpdate('discussion') }}>Discussion</HalfButton>\n      </FlexContainer>\n      <section>\n        <h2>Players</h2>\n        <PlayerContainer>\n          {gameState.players.map(p => (\n            <PlayerButton player={p} loading={loading} sendAliveUpdate={sendAliveUpdate} />\n          ))}\n        </PlayerContainer>\n      </section>\n    </Container>\n  );\n}\n\nexport default GamePage;\n","import React from 'react'\n\nexport default function Title ({ className }) {\n  return (\n    <div className={className}>\n      <img src='icon.png' height='110' alt='Amongcord Icon'/>\n      <br/>\n      <img src='logo.svg' style={{ marginBottom: '35px' }} alt='Amongcord Sync'/>\n    </div>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport { syncIdLength } from './config.json'\n\nconst CodeInputWrapper = styled.input`\n  text-transform: uppercase;\n  font-family: 'Poppins';\n  font-size: 48px;\n  height: 80px;\n  width: 100%;\n  border-radius: 5px;\n  box-sizing: border-box;\n  border: 2px solid #B3B3B3;\n  text-align: center;\n  margin-bottom: 10px;\n  caret-color: transparent;\n  user-select: initial;\n\n  &::placeholder {\n    color: #D9D9D9;\n  }\n\n  &:focus, &:active {\n    border: none;\n  }\n\n  &:focus::placeholder {\n    color: transparent;\n  }\n`\n\nexport default function CodeInput ({ syncId, setSyncId }) {\n  return (\n    <CodeInputWrapper\n      key=\"codeinput\"\n      placeholder=\"ABC123\"\n      value={syncId}\n      maxLength={syncIdLength}\n      onInput={e => setSyncId(e.target.value.toUpperCase())}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck=\"false\"\n    />\n  )\n}","import React from 'react'\n\nimport { syncIdLength } from './config.json'\nimport Button from './Button'\nimport styled from 'styled-components'\n\nconst ConnectButtonWrapper = styled(Button)`\n  width: 100%;\n  margin-top: 20px;\n`\n\nexport default function ConnectButton ({ syncId, connectToGame, loading }) {\n  return (\n    <ConnectButtonWrapper disabled={(syncId || '').length !== syncIdLength || loading} onClick={connectToGame}>Connect</ConnectButtonWrapper>\n  )\n}","import React from 'react'\nimport styled from 'styled-components';\n\nconst ExternalContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n`\n\nconst InternalContainer = styled.div`\n  margin-right: 25px;\n  margin-left: 25px;\n  text-align: center;\n  align-self: center;\n  width: 100%;\n  max-width: 330px;\n`\n\nexport default function VerticalContainer ({ children }) {\n  return (\n    <ExternalContainer key=\"external\">\n      <InternalContainer key=\"internal\">\n        {children}\n      </InternalContainer>\n    </ExternalContainer>\n  )\n}","import React from 'react'\n\nimport Button from './Button'\nimport styled from 'styled-components'\n\nconst DiscordButtonWrapper = styled(Button)`\n  background-color: #7289DA;\n  width: 100%;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #5b6dae;\n  }\n\n  &:focus, button:active {\n    border: none;\n  }\n`\n\nconst DiscordIcon = styled.img`\n  height: 15px;\n  margin-right: 10px;\n`\n\nexport default function DiscordButton () {\n  function openLink () {\n    window.open('https://add.amongcord.xyz/')\n  }\n\n  return (\n    <DiscordButtonWrapper onClick={openLink} ><DiscordIcon src='discord.svg' alt=''/>Add the bot to your server</DiscordButtonWrapper>\n  )\n}","import React from 'react'\n\nimport Title from './Title'\nimport CodeInput from './CodeInput';\nimport ConnectButton from './ConnectButton';\nimport VerticalContainer from './VerticalContainer';\nimport DiscordButton from './DiscordButton';\n\nfunction CodePage ({ syncId, setSyncId, connectToGame, loading }) {\n  return (\n    <VerticalContainer centerVertically>\n      <Title className='title'/>\n      <div>\n        <CodeInput syncId={syncId} setSyncId={setSyncId} />\n        <ConnectButton loading={loading} syncId={syncId} connectToGame={connectToGame} />\n        <DiscordButton />\n      </div>\n    </VerticalContainer>\n  )\n}\n\nexport default CodePage;\n","import React, { useState } from 'react';\n\nimport GamePage from './GamePage'\nimport CodePage from './CodePage'\n\nimport openSocket from 'socket.io-client'\n\nimport NoSleep from 'nosleep.js';\nconst noSleep = new NoSleep()\nnoSleep.enable()\n\nfunction App () {\n  const idFromPath = window.location.pathname.split('/').join('')\n  const [ syncId, setSyncId ] = useState(idFromPath)\n  \n  const [connected, setConnected] = useState(false)\n\n  const [reconnecting, setReconnecting] = useState(false)\n\n  const [socket, setSocket] = useState()\n\n  const [loading, setLoading] = useState(false)\n\n  const [gameState, setGameState] = useState({\n    sync_id: '',\n    channel_name: '',\n    game_stage: 'lobby',\n    players: []\n  })\n\n  function sendStageUpdate (stage) {\n    setLoading(true)\n    socket.emit('setStage', JSON.stringify({\n      sync_id: gameState.sync_id,\n      game_stage: stage\n    }))\n  }\n\n  function sendAliveUpdate (color, alive) {\n    setLoading(true)\n    socket.emit('setAlive', JSON.stringify({\n      sync_id: gameState.sync_id,\n      color, alive\n    }))\n  }\n\n  function connectToGame () {\n    const newSocket = openSocket(process.env.REACT_APP_SYNC_SERVER_ADDRESS || 'localhost:8081')\n\n    setLoading(true)\n\n    newSocket.on('connect', () => {\n      newSocket.emit('join', syncId)\n    })\n\n    newSocket.on('gameStateUpdate', state => {\n      setLoading(false)\n      setConnected(true)\n      setGameState(state)\n    })\n\n    newSocket.on('gameEnded', () => {\n      setSyncId('')\n      setConnected(false)\n    })\n\n    newSocket.on('connect_error', () => { setConnected(false) })\n    newSocket.on('connect_timeout', () => { setConnected(false) })\n    newSocket.on('disconnect', () => {\n      setConnected(false)\n    })\n    newSocket.on('reconnecting', () => { setReconnecting(true) })\n    newSocket.on('reconnect', () => { setReconnecting(false) })\n    newSocket.on('reconnect_failed', () => {\n      setConnected(false)\n      setReconnecting(false)\n    })\n    \n    setSocket(newSocket)\n  }\n\n  return connected ? <GamePage\n    gameState={gameState}\n    reconnecting={reconnecting}\n    sendAliveUpdate={sendAliveUpdate}\n    sendStageUpdate={sendStageUpdate}\n    loading={loading}\n  /> : <CodePage\n    syncId={syncId}\n    setSyncId={setSyncId}\n    connectToGame={connectToGame}\n    loading={loading}\n  />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}